// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ConcentratorFraud.DataAccess.Models;
using ConcentratorFraud.DataAccess.Repositories.Configurations;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
#nullable disable

namespace ConcentratorFraud.DataAccess.Repositories;

public partial class ConcentradorFraudeContext : DbContext
{
    public ConcentradorFraudeContext(DbContextOptions<ConcentradorFraudeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ActivoIncidente> ActivoIncidente { get; set; }

    public virtual DbSet<AdvanceIoc> AdvanceIoc { get; set; }

    public virtual DbSet<CategoriaIncidente> CategoriaIncidente { get; set; }

    public virtual DbSet<Ciudad> Ciudad { get; set; }

    public virtual DbSet<CiudadLocalizacion> CiudadLocalizacion { get; set; }

    public virtual DbSet<DesignacionTlp> DesignacionTlp { get; set; }

    public virtual DbSet<Incidente> Incidente { get; set; }

    public virtual DbSet<IntentosInicioSesion> IntentosInicioSesion { get; set; }

    public virtual DbSet<ModoIncidente> ModoIncidente { get; set; }

    public virtual DbSet<NivelCriticidad> NivelCriticidad { get; set; }

    public virtual DbSet<NivelImpactoActual> NivelImpactoActual { get; set; }

    public virtual DbSet<NivelImpactoEsperado> NivelImpactoEsperado { get; set; }

    public virtual DbSet<Pais> Pais { get; set; }

    public virtual DbSet<PaisInstitucion> PaisInstitucion { get; set; }

    public virtual DbSet<PaisLocalizacion> PaisLocalizacion { get; set; }

    public virtual DbSet<PrincipalIoc> PrincipalIoc { get; set; }

    public virtual DbSet<Recomendacion> Recomendacion { get; set; }

    public virtual DbSet<RiesgoIndicador> RiesgoIndicador { get; set; }

    public virtual DbSet<TipoActivoAfectado> TipoActivoAfectado { get; set; }

    public virtual DbSet<TipoActivoNoAfectado> TipoActivoNoAfectado { get; set; }

    public virtual DbSet<TipoActivoObjectivo> TipoActivoObjectivo { get; set; }

    public virtual DbSet<TipoAlerta> TipoAlerta { get; set; }

    public virtual DbSet<TipoIncidente> TipoIncidente { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.ActivoIncidenteConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.AdvanceIocConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CategoriaIncidenteConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CiudadConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CiudadLocalizacionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DesignacionTlpConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.IncidenteConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.IntentosInicioSesionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ModoIncidenteConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.NivelCriticidadConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.NivelImpactoActualConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.NivelImpactoEsperadoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PaisConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PaisInstitucionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PaisLocalizacionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PrincipalIocConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RecomendacionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RiesgoIndicadorConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoActivoAfectadoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoActivoNoAfectadoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoActivoObjectivoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoAlertaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoIncidenteConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
