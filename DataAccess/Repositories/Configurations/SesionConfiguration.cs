// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DataAccess.Models;
using DataAccess.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace DataAccess.Repositories.Configurations
{
    public partial class SesionConfiguration : IEntityTypeConfiguration<Sesion>
    {
        public void Configure(EntityTypeBuilder<Sesion> entity)
        {
            entity.HasKey(e => e.IdSesion);

            entity.Property(e => e.IdSesion).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Codebase).HasMaxLength(1000);
            entity.Property(e => e.DeviceId)
            .HasMaxLength(1000)
            .IsUnicode(false);
            entity.Property(e => e.Error)
            .HasMaxLength(1000)
            .IsUnicode(false);
            entity.Property(e => e.Estado)
            .HasMaxLength(10)
            .IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdUsuario)
            .HasMaxLength(50)
            .IsUnicode(false);
            entity.Property(e => e.InicioSesion)
            .IsRequired()
            .HasMaxLength(200)
            .IsUnicode(false);
            entity.Property(e => e.Latitud)
            .HasMaxLength(100)
            .IsUnicode(false);
            entity.Property(e => e.Longitud)
            .HasMaxLength(100)
            .IsUnicode(false);
            entity.Property(e => e.Mensaje)
            .IsRequired()
            .HasMaxLength(1000)
            .IsUnicode(false);

            entity.HasOne(d => d.IdAplicacionNavigation).WithMany(p => p.Sesion)
            .HasForeignKey(d => d.IdAplicacion)
            .HasConstraintName("FK_Sesion_Aplicacion");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Sesion)
            .HasForeignKey(d => d.IdUsuario)
            .HasConstraintName("FK_Sesion_Usuario");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Sesion> entity);
    }
}
